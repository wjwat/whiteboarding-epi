Question #4: Checking for Uniqueness

Write an algorithm that determines whether all the elements in a string are
unique. You may not convert the string into an array or use array methods to
solve this problem. The algorithm should return a boolean. Example

Input: "hello"

Output: false

Input: "copyright"

Output: true

--------------------------------------------------------------------------------

Notes:
  - Things are getting a little better here, but I'm definitely going to come
    back and look at some of these problems.
  - What are array methods in this case?

--------------------------------------------------------------------------------

// Iteration
const unique = (s) => {
  for (let i = 0; i < s.length; i++) {
    let t = s.indexOf(s[i]);

    if (t === i || t === -1) {
      continue;
    } else {
      return false;
    }
  }

  return true;
};

// Recursion
const unique = (s) => {
  if (s.length === 0) {
    return true;
  }

  let t = s.slice(1).indexOf(s[0]);

  if (t !== -1) {
    return false;
  } else {
    return unique(s.slice(1));
  }
};

// Not using indexOf
const unique = (s) => {
  for (let i = 0; i < s.length; i++) {
    for (let j = i+1; j < s.length; j++) {
      if (s[i] === s[j]) {
        return false;
      }
    }
  }
  return true;
};

// Not using indexOf with recursion
const unique = (s) => {
  if (s.length === 1) {
    return true;
  }

  for (let i = 1; i < s.length; i++) {
    if (s[0] === s[i]) {
      return false;
    }
  }

  return unique(s.slice(1));
};
